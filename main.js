(()=>{var e={144:(e,n,t)=>{"use strict";t.d(n,{Z:()=>f});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),A=t(667),s=t.n(A),p=new URL(t(654),t.b),c=new URL(t(703),t.b),d=i()(a()),l=s()(p),u=s()(c);d.push([e.id,".trash,.wasteboxes-container .wastebox .top,.wasteboxes-container .wastebox .box,.wasteboxes-container .wastebox,.wasteboxes-container,.timer-wrapper .timer-container #feedback-container,.timer-wrapper .timer-container>div,.timer-wrapper .timer-container>svg,.timer-wrapper,.counter,.upper-container,#app{display:flex;justify-content:center;align-items:center}body{margin:0;padding:0}#app{width:100%;height:100vh;min-height:520px;flex-direction:column;font-family:sans-serif;overflow:hidden}@media(max-width: 768px){.upper-container{flex-wrap:wrap}}.counter{color:#fff;height:50px;border-radius:25px;width:130px}@media(max-width: 768px){.counter{margin:20px}}@media(max-width: 340px){.counter{margin:20px 5px}}.counter.correct{background-color:#90ee90}.counter.correct .counter-content{background-image:url("+l+");padding-left:45px}.counter.wrong{background-color:#cd5c5c}.counter.wrong .counter-content{background-image:url("+u+");padding-left:38px}.counter .counter-content{font-size:35px;background-position:left center;background-repeat:no-repeat;transition:transform .2s}.counter.add .counter-content{transform:scale(1.2);transition:transform .05s}.timer-wrapper{margin:20px 100px}@media(max-width: 768px){.timer-wrapper{margin:20px 0;order:3;width:100%}}@media(max-height: 620px){.timer-wrapper{margin:0 0 30px 0}}.timer-wrapper .timer-container{height:150px;width:150px;position:relative}@media(max-width: 768px)and (orientation: portrait){.timer-wrapper .timer-container{width:200px;height:200px}}.timer-wrapper .timer-container>div,.timer-wrapper .timer-container>svg{width:100%;height:100%;position:absolute;top:0;left:0}.timer-wrapper .timer-container .new-game{background:#a31a66;cursor:pointer;color:#fff;border-radius:50%;transition:.3s;font-size:34px}.timer-wrapper .timer-container .new-game:hover{background-color:#b5558a}.timer-wrapper .timer-container.active .new-game{opacity:0;cursor:default}.timer-wrapper .timer-container .timer{transform:rotateY(180deg) rotateZ(270deg);transform-origin:center}.timer-wrapper .timer-container .timer .indicator{fill:none;stroke-linecap:round;stroke-width:10px;stroke:#a31a66}.timer-wrapper .timer-container .timer .indicator.hurry{animation:blink 1s linear infinite}@keyframes blink{0%{opacity:1}50%{opacity:.3}100%{opacity:1}}.timer-wrapper .timer-container .timer .backdrop{fill:none;stroke-width:10px;stroke:#d3d3d3}.timer-wrapper .timer-container #feedback-container .feedback{position:absolute;opacity:0;width:80px;height:80px;border-radius:50px;background-position:center;background-repeat:no-repeat;animation:.8s showfeedback}.timer-wrapper .timer-container #feedback-container .feedback.correct{background-color:#90ee90;background-image:url("+l+")}.timer-wrapper .timer-container #feedback-container .feedback.wrong{background-color:#cd5c5c;background-image:url("+u+");animation-timing-function:cubic-bezier(0.75, 0.15, 0.65, 1.85)}@keyframes showfeedback{0%{opacity:0;transform:scale(0.5)}50%{opacity:1;transform:scale(1)}60%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.5)}}@media(max-height: 620px){.wasteboxes-container{margin-top:-100px}}.wasteboxes-container .wastebox{flex-direction:column;perspective:1000px;perspective-origin:center;transform-style:preserve-3d;width:25vw;margin:10px;max-width:200px}.wasteboxes-container .wastebox .top,.wasteboxes-container .wastebox .box{background-size:100% auto;background-repeat:no-repeat;background-position:top}.wasteboxes-container .wastebox .box{width:200px;height:220px;position:relative;color:#fff;user-select:none}.wasteboxes-container .wastebox .top{align-items:flex-start;width:160px;height:80px;background-size:100% auto;transform:translateZ(-77px) translateY(-5px) rotateX(-95deg);transform-origin:bottom;transition:transform .3s;transform-style:preserve-3d}.wasteboxes-container .wastebox .top .topper{transform:rotateX(90deg) translate3d(0, -15px, -10px);transform-origin:top;background:red;width:153px;height:15px;position:relative;border-radius:15px 15px 0 0}.wasteboxes-container .wastebox.sneak{cursor:pointer}.wasteboxes-container .wastebox.sneak .top{transform:translateZ(-77px) translateY(-5px) rotateX(-80deg)}.wasteboxes-container .wastebox.omnomnom .top{transform:translateZ(-77px) translateY(-5px) rotateX(-20deg)}.wasteboxes-container .wastebox .trash{z-index:auto;top:0;left:50%;margin-left:-50px;transform:translateZ(-1px)}.wasteboxes-container .wastebox .trash.drop{animation:drop .3s forwards}@keyframes drop{0%{transform:translate3d(0, 0, -1px)}100%{transform:translate3d(0, 100px, -1px)}}.trash{position:absolute;z-index:100;width:100px;height:100px;background-repeat:no-repeat;background-position:center;border-radius:50%;background-color:#fff;animation:appear .3s forwards}@keyframes appear{0%{opacity:0;transform:scale(0.5)}100%{opacity:1;transform:scale(1)}}.trash.disappear{animation:disappear .3s forwards}@keyframes disappear{0%{opacity:1;transform:scale(1) rotate(0)}100%{opacity:0;transform:scale(0.5) rotate(270)}}.trash.flying{animation:none;transition:transform .3s}","",{version:3,sources:["webpack://./src/styles/main.scss"],names:[],mappings:"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",sourcesContent:["$purple: #a31a66;\n$lightpurple: #b5558a;\n\n$tablet: 768px;\n$mobile: 425px;\n\n%flex-center {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\nbody {\n   margin: 0;\n   padding: 0;\n}\n\n#app {\n   width: 100%;\n   height: 100vh;\n   min-height: 520px;\n   @extend %flex-center;\n   flex-direction: column;\n   font-family: sans-serif;\n   overflow: hidden;\n}\n\n.upper-container {\n   @extend %flex-center;\n   @media (max-width: $tablet) {\n      flex-wrap: wrap;\n   }\n}\n\n.counter {\n   @extend %flex-center;\n   color: white;\n   height: 50px;\n   border-radius: 25px;\n   width: 130px;\n   @media (max-width: $tablet) {\n      margin: 20px;\n   }\n   @media (max-width: 340px) {\n      margin: 20px 5px;\n   }\n   &.correct {\n      background-color: lightgreen;\n      .counter-content {\n         background-image: url('@/assets/ok.png');\n         padding-left: 45px;\n      }\n   }\n   &.wrong {\n      background-color: indianred;\n      .counter-content {\n         background-image: url('@/assets/no.png');\n         padding-left: 38px;\n      }\n   }\n   .counter-content {\n      font-size: 35px;\n      background-position: left center;\n      background-repeat: no-repeat;\n      transition: transform 0.2s;\n   }\n   &.add .counter-content {\n      transform: scale(1.2);\n      transition: transform 0.05s;\n   }\n}\n\n.timer-wrapper {\n   margin: 20px 100px;\n   @extend %flex-center;\n   @media (max-width: $tablet) {\n      margin: 20px 0;\n      order: 3;\n      width: 100%;\n   }\n   @media (max-height: 620px) {\n      margin: 0 0 30px 0;\n   }\n   .timer-container {\n      height: 150px;\n      width: 150px;\n      position: relative;\n      @media (max-width: $tablet) and (orientation: portrait) {\n         width: 200px;\n         height: 200px;\n      }\n      & > div,\n      & > svg {\n         width: 100%;\n         height: 100%;\n         @extend %flex-center;\n         position: absolute;\n         top: 0;\n         left: 0;\n      }\n      .new-game {\n         background: $purple;\n         cursor: pointer;\n         color: white;\n         border-radius: 50%;\n         transition: 0.3s;\n         font-size: 34px;\n         &:hover {\n            background-color: $lightpurple;\n         }\n      }\n      &.active {\n         .new-game {\n            opacity: 0;\n            cursor: default;\n         }\n      }\n      .timer {\n         transform: rotateY(180deg) rotateZ(270deg);\n         transform-origin: center;\n         .indicator {\n            fill: none;\n            stroke-linecap: round;\n            stroke-width: 10px;\n            stroke: $purple;\n            &.hurry {\n               animation: blink 1s linear infinite;\n            }\n            @keyframes blink {\n               0% {\n                  opacity: 1;\n               }\n               50% {\n                  opacity: 0.3;\n               }\n               100% {\n                  opacity: 1;\n               }\n            }\n         }\n         .backdrop {\n            fill: none;\n            stroke-width: 10px;\n            stroke: lightgrey;\n         }\n      }\n      #feedback-container {\n         @extend %flex-center;\n         .feedback {\n            position: absolute;\n            opacity: 0;\n            width: 80px;\n            height: 80px;\n            border-radius: 50px;\n            background-position: center;\n            background-repeat: no-repeat;\n            animation: 0.8s showfeedback;\n            &.correct {\n               background-color: lightgreen;\n               background-image: url('@/assets/ok.png');\n            }\n            &.wrong {\n               background-color: indianred;\n               background-image: url('@/assets/no.png');\n               animation-timing-function: cubic-bezier(0.75, 0.15, 0.65, 1.85);\n            }\n            @keyframes showfeedback {\n               0% {\n                  opacity: 0;\n                  transform: scale(0.5);\n               }\n               50% {\n                  opacity: 1;\n                  transform: scale(1);\n               }\n               60% {\n                  opacity: 1;\n                  transform: scale(1);\n               }\n               100% {\n                  opacity: 0;\n                  transform: scale(0.5);\n               }\n            }\n         }\n      }\n   }\n}\n\n.wasteboxes-container {\n   @extend %flex-center;\n   @media (max-height: 620px) {\n      margin-top: -100px;\n   }\n   .wastebox {\n      @extend %flex-center;\n      flex-direction: column;\n      perspective: 1000px;\n      perspective-origin: center;\n      transform-style: preserve-3d;\n      width: 25vw;\n      margin: 10px;\n      max-width: 200px;\n      %background {\n         background-size: 100% auto;\n         background-repeat: no-repeat;\n         background-position: top;\n      }\n      .box {\n         @extend %background;\n         @extend %flex-center;\n         width: 200px;\n         height: 220px;\n         position: relative;\n         color: white;\n         user-select: none;\n      }\n      .top {\n         @extend %background;\n         @extend %flex-center;\n         align-items: flex-start;\n         width: 160px;\n         height: 80px;\n         background-size: 100% auto;\n         transform: translateZ(-77px) translateY(-5px) rotateX(-95deg);\n         transform-origin: bottom;\n         transition: transform 0.3s;\n         transform-style: preserve-3d;\n         .topper {\n            transform: rotateX(90deg) translate3d(0, -15px, -10px);\n            transform-origin: top;\n            background: red;\n            width: 153px;\n            height: 15px;\n            position: relative;\n            border-radius: 15px 15px 0 0;\n         }\n      }\n      &.sneak {\n         cursor: pointer;\n         .top {\n            transform: translateZ(-77px) translateY(-5px) rotateX(-80deg);\n         }\n      }\n      &.omnomnom {\n         .top {\n            transform: translateZ(-77px) translateY(-5px) rotateX(-20deg);\n         }\n      }\n      // trash appended to the box\n      .trash {\n         z-index: auto;\n         top: 0;\n         left: 50%;\n         margin-left: -50px;\n         transform: translateZ(-1px);\n         &.drop {\n            animation: drop 0.3s forwards;\n         }\n         @keyframes drop {\n            0% {\n               transform: translate3d(0, 0, -1px);\n            }\n            100% {\n               transform: translate3d(0, 100px, -1px);\n            }\n         }\n      }\n   }\n}\n\n.trash {\n   position: absolute;\n   z-index: 100;\n   width: 100px;\n   height: 100px;\n   background-repeat: no-repeat;\n   background-position: center;\n   border-radius: 50%;\n   background-color: white;\n   @extend %flex-center;\n   animation: appear 0.3s forwards;\n   @keyframes appear {\n      0% {\n         opacity: 0;\n         transform: scale(0.5);\n      }\n      100% {\n         opacity: 1;\n         transform: scale(1);\n      }\n   }\n   &.disappear {\n      animation: disappear 0.3s forwards;\n   }\n   @keyframes disappear {\n      0% {\n         opacity: 1;\n         transform: scale(1) rotate(0);\n      }\n      100% {\n         opacity: 0;\n         transform: scale(0.5) rotate(270);\n      }\n   }\n   &.flying {\n      animation: none;\n      transition: transform 0.3s;\n   }\n}\n"],sourceRoot:""}]);const f=d},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var p=0;p<e.length;p++){var c=[].concat(e[p]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],A=0;A<e.length;A++){var s=e[A],p=r.base?s[0]+r.base:s[0],c=o[p]||0,d="".concat(p," ").concat(c);o[p]=c+1;var l=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var f=a(u,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var A=t(o[i]);n[A].references--}for(var s=r(e,a),p=0;p<o.length;p++){var c=t(o[p]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},715:(e,n,t)=>{var r={"./bong.png":71,"./glass-bottle.png":707,"./large-plastic-bottle.png":273,"./metal-can.png":851,"./no.png":703,"./ok.png":654,"./paper-cup.png":480,"./paper-plane.png":855,"./plastic-bottle.png":575,"./wastebox_blue.png":735,"./wastebox_green.png":485,"./wastebox_red.png":844,"./wastebox_yellow.png":765,"./wastetop_blue.png":184,"./wastetop_green.png":691,"./wastetop_red.png":202,"./wastetop_yellow.png":959,"./wrench.png":265};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=715},500:(e,n,t)=>{var r={"./wastebox_blue.png":735,"./wastebox_green.png":485,"./wastebox_red.png":844,"./wastebox_yellow.png":765};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=500},786:(e,n,t)=>{var r={"./wastetop_blue.png":184,"./wastetop_green.png":691,"./wastetop_red.png":202,"./wastetop_yellow.png":959};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=786},71:(e,n,t)=>{"use strict";e.exports=t.p+"0ebff996b26c189bffce.png"},707:(e,n,t)=>{"use strict";e.exports=t.p+"d8e4b4a6a2b4a8f4e794.png"},273:(e,n,t)=>{"use strict";e.exports=t.p+"a5f84ec598137a9494f5.png"},851:(e,n,t)=>{"use strict";e.exports=t.p+"ec9754d3f80f72ea8dc7.png"},703:(e,n,t)=>{"use strict";e.exports=t.p+"7dfe0a039ad13996c481.png"},654:(e,n,t)=>{"use strict";e.exports=t.p+"97f301194890b2bb4ba6.png"},480:(e,n,t)=>{"use strict";e.exports=t.p+"73f19f7355fbfd88a0de.png"},855:(e,n,t)=>{"use strict";e.exports=t.p+"a93a5439199cfa385085.png"},575:(e,n,t)=>{"use strict";e.exports=t.p+"dcd8fd794b440ae9f044.png"},735:(e,n,t)=>{"use strict";e.exports=t.p+"8432d6a198d00578556c.png"},485:(e,n,t)=>{"use strict";e.exports=t.p+"6a3919ff7fa8be087b5c.png"},844:(e,n,t)=>{"use strict";e.exports=t.p+"268232c1a5ca0354b929.png"},765:(e,n,t)=>{"use strict";e.exports=t.p+"339b186fdebcf267e5fe.png"},184:(e,n,t)=>{"use strict";e.exports=t.p+"6ec888073f9077472f5a.png"},691:(e,n,t)=>{"use strict";e.exports=t.p+"dda7c8dc230445a7b0da.png"},202:(e,n,t)=>{"use strict";e.exports=t.p+"13492820f3a340b9aafe.png"},959:(e,n,t)=>{"use strict";e.exports=t.p+"ce2ecc06589f16428aaa.png"},265:(e,n,t)=>{"use strict";e.exports=t.p+"dc9f13dbff817eb1b89f.png"},358:e=>{"use strict";e.exports=JSON.parse('[{"name":"plastic-bottle","type":"plastic"},{"name":"large-plastic-bottle","type":"plastic"},{"name":"glass-bottle","type":"glass"},{"name":"bong","type":"glass"},{"name":"metal-can","type":"metal"},{"name":"wrench","type":"metal"},{"name":"paper-cup","type":"paper"},{"name":"paper-plane","type":"paper"}]')}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.p="./",t.b=document.baseURI||self.location.href,(()=>{"use strict";function e(e,n){var t=document.createElement(e);if(n){var r=n.slice(1);"."==n.charAt(0)?t.className=r:"#"==n.charAt(0)&&(t.id=r)}return t}function n(e,n){for(var t=document.createElementNS("http://www.w3.org/2000/svg",e),r=0,a=Object.entries(n);r<a.length;r++){var o=a[r],i=o[0],A=o[1];t.setAttributeNS(null,i,A)}return t}var r=["blue","green","red","yellow"],a=new Proxy({green:"glass",blue:"plastic",yellow:"paper",red:"metal"},{get:function(e,n){return e.hasOwnProperty(n)?e[n]:Object.keys(e).find((function(t){return e[t]==n}))}}),o={};r.forEach((function(e){o[e]={box:t(500)("./wastebox_"+e+".png"),top:t(786)("./wastetop_"+e+".png")}}));const i=o;var A=function(){function n(n){this.color=n,this.boxEl=e("div",".box"),this.topEl=e("div",".top"),this.topperEl=e("div",".topper"),this.el=e("div",".wastebox"),this.topEl.append(this.topperEl),this.el.append(this.topEl),this.el.append(this.boxEl),this.boxEl.style.backgroundImage="url("+i[n].box+")",this.topEl.style.backgroundImage="url("+i[n].top+")",this.topperEl.style.backgroundColor=n,this.boxEl.innerHTML=a[n].toUpperCase()}return n.prototype.getTopCenter=function(){var e=this.el.getBoundingClientRect();return{x:e.x+.5*e.width,y:e.y}},n.prototype.eat=function(){var e=this;this.el.classList.add("omnomnom"),window.setTimeout((function(){return e.el.classList.remove("omnomnom")}),400)},n}(),s=t(358);const p=Object.fromEntries(s.map((function(e){return[e.name,t(715)("./"+e.name+".png")]})));var c=t(358),d=function(){function n(){this.isFlying=!1;var n=Math.floor(Math.random()*c.length);this.name=c[n].name,this.type=c[n].type,this.color=a[this.type],console.log(this.type,this.color,this.name),this.el=e("div",".trash"),this.el.style.backgroundImage="url("+p[this.name]+")"}return n.prototype.appear=function(){return document.querySelector("#trash-container").append(this.el),this},n.prototype.disappear=function(){var e=this;this.el.classList.add("disappear"),this.el.addEventListener("animationend",(function(){return e.el.remove()}),{once:!0})},n.prototype.goToWastebox=function(e){var n=this,t=e.getTopCenter(),r=this.el.getBoundingClientRect(),a=t.x-r.x-.5*r.width,o=t.y-r.y;return new Promise((function(t){return r=n,i=void 0,s=function(){var n,r=this;return function(e,n){var t,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:A(0),throw:A(1),return:A(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function A(o){return function(A){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=n.call(e,i)}catch(e){o=[6,e],r=0}finally{t=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,A])}}}(this,(function(i){switch(i.label){case 0:return this.isFlying=!0,this.el.classList.add("flying"),n=window.getComputedStyle(this.el),[4,new Promise((function(e){var t=function(){setTimeout((function(){"0s"!=n.getPropertyValue("transition-duration")?e():t()}),0)};t()}))];case 1:return i.sent(),this.el.style.transform="translate("+a+"px, "+o+"px)",this.el.addEventListener("transitionend",(function(){r.el.remove(),r.el.style.transform="",r.el.classList.add("drop"),e.el.append(r.el)}),{once:!0}),this.el.addEventListener("animationend",(function(){r.el.remove(),t()}),{once:!0}),[2]}}))},new((A=void 0)||(A=Promise))((function(e,n){function t(e){try{o(s.next(e))}catch(e){n(e)}}function a(e){try{o(s.throw(e))}catch(e){n(e)}}function o(n){var r;n.done?e(n.value):(r=n.value,r instanceof A?r:new A((function(e){e(r)}))).then(t,a)}o((s=s.apply(r,i||[])).next())}));var r,i,A,s}))},n}();function l(){(C=6e4-(Date.now()-m))>0?(b.setAttribute("stroke-dasharray",440*C/6e4+" 440"),C<1e4&&!b.classList.contains("hurry")&&b.classList.add("hurry"),requestAnimationFrame(l)):(f=!1,x.classList.remove("active"),u())}var u,f=!1,C=0,m=0,g=e("div",".timer-wrapper"),x=e("div",".timer-container"),h=n("svg",{class:"timer",viewBox:"0 0 150 150"});h.append(n("circle",{r:"70",cx:"75",cy:"75",class:"backdrop"}));var b=n("circle",{r:"70",cx:"75",cy:"75",class:"indicator","stroke-dasharray":"440"});h.append(b);var w=e("div","#trash-container"),v=e("div",".new-game");v.innerHTML="Начать!";var y=e("div","#feedback-container");x.append(h),x.append(y),x.append(w),x.append(v),g.append(x);var k,B=function(){function n(n){this.value=0,this.el=e("div",".counter "+n),this.contentEl=e("div",".counter-content"),this.el.append(this.contentEl),this.contentEl.innerHTML=this.value+""}return n.prototype.add=function(){this.value++,this.update()},n.prototype.reset=function(){this.value=0,this.update()},n.prototype.update=function(){var e=this;this.contentEl.innerHTML=this.value+"",this.el.classList.add("add"),this.contentEl.addEventListener("transitionend",(function(){return e.el.classList.remove("add")}),{once:!0})},n}();function E(e){"touch"!=e.pointerType&&f&&k&&e.target.classList.add("sneak")}function G(e){"touch"!=e.pointerType&&e.target.classList.remove("sneak")}function H(){k&&!k.isFlying&&(k.disappear(),k=null)}var L=e("div","#app"),S=e("div",".upper-container"),M=new B("correct"),T=new B("wrong");S.append(M.el),S.append(g),S.append(T.el),L.append(S),v.addEventListener("click",(function(){var e;f||(M.reset(),T.reset(),e=H,x.classList.add("active"),f=!0,C=6e4,m=Date.now(),b.classList.remove("hurry"),requestAnimationFrame(l),u=e,k=(new d).appear())}));var _=e("div",".wasteboxes-container");r.map((function(n){var t=new A(n);return t.el.addEventListener("click",(function(){return function(n){if(f&&k&&!k.isFlying){var t=n.color==k.color;t?M.add():T.add(),k.goToWastebox(n).then((function(){f&&(k=(new d).appear())})),function(n){var t=e("div",".feedback");t.classList.add(n?"correct":"wrong"),t.addEventListener("animationend",(function(){return t.remove()}),{once:!0}),y.append(t)}(t),n.eat()}}(t)})),t.el.addEventListener("pointerenter",E),t.el.addEventListener("pointerleave",G),_.append(t.el),t})),L.append(_);const O=L;var U=t(379),D=t.n(U),N=t(795),I=t.n(N),W=t(569),j=t.n(W),Y=t(565),Z=t.n(Y),z=t(216),F=t.n(z),R=t(589),q=t.n(R),K=t(144),$={};$.styleTagTransform=q(),$.setAttributes=Z(),$.insert=j().bind(null,"head"),$.domAPI=I(),$.insertStyleElement=F(),D()(K.Z,$),K.Z&&K.Z.locals&&K.Z.locals,document.body.append(O)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,